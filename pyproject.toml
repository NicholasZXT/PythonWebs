[build-system]
# 使用Pixi
build-backend = "hatchling.build"
requires = ["hatchling"]
# 使用 Poetry
#requires = ["poetry-core>=2.0.0,<3.0.0"]
#build-backend = "poetry.core.masonry.api"

# ------------------------------------ Project 配置 ------------------------------------
[project]
name = "Python-Webs"
version = "1.0.0"
description = "A simple tutorial for python web frameworks."
authors = [
    {name = "Nicholas", email = "nicho@email.com"}
]
readme = "README.md"

#requires-python = ">=3.10,<4.0"
requires-python = "==3.10.*"

dependencies = [
    "setuptools",
    "wheel",
    "pip",
    "psutil >= 5.9.8"
]

[project.optional-dependencies]

[dependency-groups]
db  = [
    "requests >= 2.32.0",
    "httpx >= 0.24.1",
    "pymysql >= 1.0.0",
    "aiomysql >= 0.2.0",
#    "sqlalchemy == 1.4.*",
    "sqlalchemy >= 2.0.0",
    "alembic",
    "peewee >= 3.17.0",
    "elasticsearch >= 7.13.0",
    "pyhive >= 0.7.0",
    # pyhive 依赖下面的 thrift
	"thrift >= 0.20.0",
    "thrift_sasl >= 0.4.3",
    "kafka-python >= 2.0.2",
#    "neo4j-python-driver >= 5.5.0",
#    "py2neo >= 2021.2.3",
#    "happybase >= 1.2.0",
#    "minio >= 7.1.0",
]
flask = [
    "gunicorn >= 23.0.0 ; sys_platform == 'linux'",
    "werkzeug >= 2.1.2",
    "jinja2 >= 3.1.6",
    "flask >= 2.1.3",
    "pyjwt >= 2.10.0",
    "itsdangerous >= 2.2.0",
    "webargs >= 8.4.0",
    "marshmallow >= 3.19.0",
    "flask-sqlalchemy   >= 2.5.1",
    "flask-caching      >= 2.0.2",
    "flask-classful     >= 0.14.2",
    "flask-restful      >= 0.3.9",
    "flask-admin        >= 1.6.1",
    "flask-login        >= 0.6.2",
    "flask-httpauth     >= 4.8.0",
    "flask-jwt-extended >= 4.6.0",
    "flask-principal    >= 0.4.0",
    "flask-security-too >= 5.1.2",
    "flask-wtf          >= 1.1.1",
    "flask-compress     >= 1.13",
    "python-jose >= 3.3.0",
]
fastapi  = [
    "uvicorn >= 0.20.0",
    "starlette >= 0.46.1",
    "fastapi >= 0.115.11",
    "pydantic >= 2.10.0",
    "pydantic-core >= 2.27.0",
    "pydantic-settings >= 2.8.0",
    "python-dotenv >= 0.21.0",
    "sqlmodel>= 0.0.24",
    "fastapi-sqla >= 3.4.8",
    "fastapi-login >= 1.10.3",
    "authx >= 1.4.1",
    "fastapi-users>= 14.0.1",
#    "fastapi-auth-jwt >= 0.1.11",
    "fastapi-restful >= 0.6.0",
#    "fastapi-router-controller >= 0.5.0",
]
django = [
    "django >=4.1,<5.0",
    "djangorestframework >= 3.14",
    "djangorestframework-simplejwt >= 5.3.1",
]
#litestar  = ["litestar"]
test = [
    "pytest == 7.4.4",
#    "pytest >= 8.2.0",
]
other = [
    "configparser >= 5.0.0",
    "pyyaml >= 6.0.2",
    "plotly >= 6.0.0",
    "dash >= 2.14.2",
    "passlib >= 1.7.4",
    "openpyxl >= 3.0.10",
    "numpy >= 1.25.0",
    "pandas >= 1.5.3",
    "phonenumbers >= 8.13.40",
    "email-validator >= 2.2.0",
]


# ------------------------------------ UV 配置 ------------------------------------
# 使用方式1： uv sync
# 使用方式2： uv export --format pylock.toml -o pylock.toml  &&  uv pip sync pylock.toml
[tool.uv]
managed = true
package = false
index-url = "https://pypi.tuna.tsinghua.edu.cn/simple"
python-downloads = "manual"
python-preference = "system"
#python-preference = "managed"
#link-mode = "copy"

default-groups = ["db", "flask", "fastapi", "django", "test", "other"]

# 适用于 uv pip 系列命令的配置
[tool.uv.pip]
index-url = "https://pypi.tuna.tsinghua.edu.cn/simple"
#extra-index-url = []
system = true
break-system-packages = true
all-extras = true
# group 配置对于 uv pip sync 命令不生效
group = ["db", "flask", "fastapi", "django", "test", "other"]
#torch-backend = "auto"